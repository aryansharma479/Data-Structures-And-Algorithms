#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

bool isPossible(vector<int>&arr,int n,int c,int minDistanceAllowed)
{
    int cows=1;
    int lastPlacedCow=arr[0];
    for(int i=0;i<n;i++)
    {
        if(arr[i]-lastPlacedCow>=minDistanceAllowed)
        {
            cows++;
            lastPlacedCow=arr[i];
        }
        if(cows==c)
        {
            return true;
        }
    }
    return false;
}

int getDistance(vector<int>&arr,int n,int c)
{   
    sort(arr.begin(),arr.end());
    int st=1;
    int end=arr[n-1]-arr[0];
    int ans=-1;
    while(st<=end)
    {
        int mid=st+(end-st)/2;
        if(isPossible(arr,n,c,mid)) //if true goes to ->RIGHT more bigger values
        {
            ans=mid;
            st=mid+1;

        }
        else //NOT POSSIBLE 
        {
            end=mid-1;
        }
    }
    return ans;
}

int main()
{
cout<<endl;
int n=5;
int c=3;
vector<int> arr={1,2,8,4,9};
cout<<getDistance(arr,n,c)<<endl;
return 0;
cout<<endl;
}
